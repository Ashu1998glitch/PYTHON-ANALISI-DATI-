# -*- coding: utf-8 -*-
"""Un benvenuto a Colaboratory

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

# Analisi diffusione COVID-19 nel mondo Il committente richiede di avere un report su casi e vaccinazioni in diverse aree del mondo;
# a tal fine, richiede di utilizzare il dataset, curato da Our World in Data, all'indirizzo https://github.com/owid/covid-19-data/tree/master/public/data; alla voce "ğŸ—‚ dataset" scaricare il dataset nel formato che si preferisce.

import pandas as pd

# Si richiede di verificare le dimensioni del dataset e i relativi metadati;
df=pd.read_csv("owid-covid-data.csv")

df.shape

df.info()

# Si chiede poi per ogni continente di trovare il numero di casi totali avvenuti in quello stesso continente; si chiede di non considerare eventuali locazioni che nel dataset non appartengono ad alcun continente;
df_continent_total_cases=df.groupby("continent")["total_cases"].sum()
print(df_continent_total_cases)

# Sempre riguardo i casi totali, si chiede di scrivere del codice che,date due variabili contenenti i nomi di continenti,ne confronti i seguenti relativi descrittori statistici:valore massimo, media, e percentuale rispetto al numero dei casi totali nel mondo (calcolati anche sulle locazioni senza indicazione di continente);
def compare_continents(continents):
  for continent in continents:
        continent_data = df[df['continent'] == continent]['total_cases']

        # Calcolo i descrittori statistici per il continente
        continent_max = continent_data.max()
        continent_mean = continent_data.mean()
        continent_perc = (continent_data.sum() / df['total_cases'].sum()) * 100

        # Stampo i risultati
        print(f"Statistiche per {continent}:")
        print(f"Massimo: {continent_max}")
        print(f"Media: {continent_mean}")
        print(f"Percentuale: {continent_perc:.2f}%")
        print()

# Utilizzo la funzione per confrontare i continenti
compare_continents(["Africa", "Asia"])

# Selezionare i dati relativi all'Italia nel 2022, e mostrare con un grafico adeguato l'evoluzione del casi totali rispetto alla data. Mostrare poi con un grafico adeguato il numero di nuovi casi rispetto alla data (filtrare i dati se necessario). Mostrare infine un grafico che mostra l'andamento della somma cumulativa nuovi casi del 2022, e commentare se ci sono similaritÃ  con l'andamento del numero dei casi totali;
italy_2022 = df[(df['location'] == 'Italy') & (df['date'].str.startswith('2022'))]
# Plot total cases in base alla data
italy_2022.plot(x='date', y='total_cases', title='Total Cases in Italy (2022)')

# Plot new cases per il periodo
italy_2022.plot(x='date', y='new_cases', title='New Cases in Italy (2022)')

# Plot cumulative domma nuovi casi
italy_2022['cumulative_new_cases'] = italy_2022['new_cases'].cumsum()
italy_2022.plot(x='date', y='cumulative_new_cases', title='Cumulative New Cases in Italy (2022)')

"""#Ci sono molte similaritÃ  tra il grafico dell'andamento del numero dei casi totali in relazione alla somma cumulativa nuovi casi del 2022"""

# Riguardo le nazioni di Italia, Germania e Francia, mostrare in un boxplot la differenza tra queste nazioni riguardo il numero di pazienti in terapia intensiva (Intensive Care Unit, ICU) da maggio 2022 (incluso) ad aprile 2023 (incluso), e scrivere un breve commento a riguardo;

icu_data = df[(df['location'].isin(['Italy', 'Germany', 'France'])) &
                      (df['date'] >= '2022-05-01') & (df['date'] <= '2023-04-30')]

icu_data.boxplot(column='icu_patients', by='location', grid=False)

# Riguardo le nazioni di Italia, Germania, Francia e Spagna nel 2023, mostrare la somma dei pazienti ospitalizzati per ognuna -- se ci sono dati nulli, suggerire se puÃ² essere possibile gestirli tramite sotituzione o meno
hospital_data_2023 = df[(df['location'].isin(['Italy', 'Germany', 'France', 'Spain'])) &
                                (df['date'].str.startswith('2023'))]

hospitalized_sum = hospital_data_2023.groupby('location')['hosp_patients'].sum()
print(hospitalized_sum)

"""### **In questo arco di tempo, in Germania non sarÃ  stato registrato nessuno,o bisogna leggere il motivo ti tutti questi NaN**"""